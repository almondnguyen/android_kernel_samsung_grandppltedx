/*
 *
 * Zinitix bt541 touch driver
 *
 * Copyright (C) 2013 Samsung Electronics Co.Ltd
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 */


#ifndef _LINUX_BT541_TS_H
#define _LINUX_BT541_TS_H

#define TS_DRVIER_VERSION	"1.0.18_1"

#define BT541_TS_DEVICE		"bt541_ts"

#define zinitix_debug_msg(fmt, args...) \
	do { \
		if (m_ts_debug_mode) \
		printk(KERN_INFO "bt541_ts[%-18s:%5d] " fmt, \
				__func__, __LINE__, ## args); \
	} while (0);

#define zinitix_printk(fmt, args...) \
	do { \
		printk(KERN_INFO "bt541_ts[%-18s:%5d] " fmt, \
				__func__, __LINE__, ## args); \
	} while (0);

extern struct class *sec_class;

/* TSP SPEC V0.0 (05)
 * DND GAP 10%, HF DND GAP 10%
 * 2015. 05. 20
 */
static const u16 (*dnd_h_gap)[9], (*dnd_v_gap)[10];
static const u16 (*hfdnd_h_gap)[9], (*hfdnd_v_gap)[10];
static const u16 (*dnd_max)[10], (*dnd_min)[10];

static const u16 tsp_dnd_h_gap[19][9] = {
	{	11,	11,	11,	11,	12,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	12,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{	12,	11,	11,	11,	11,	11,	11,	11,	11},
	{	12,	11,	11,	11,	12,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	12,	11,	11,	11,	12,	11,	11,	11,	11},
	{	11,	11,	11,	11,	12,	11,	11,	11,	12},
	{	14,	12,	11,	11,	12,	11,	11,	11,	13},
	{	15,	11,	11,	11,	12,	11,	11,	12,	14},
	{	 0,	 0,	 0,	 0,	 0,	 0,	 0,	16,	0 }	
};

static const u16 assy_dnd_h_gap[19][9] = {
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	11,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{12,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	13},
	{13,	11,	11,	11,	11,	11,	11,	11,	11},
	{12,	11,	11,	11,	12,	11,	11,	11,	12},
	{12,	11,	11,	11,	11,	11,	11,	11,	12},
	{12,	11,	11,	11,	12,	11,	11,	11,	11},
	{11,	11,	11,	11,	11,	11,	11,	11,	12},
	{13,	12,	11,	11,	12,	11,	11,	11,	12},
	{14,	11,	11,	11,	12,	11,	11,	12,	14},
	{0,	0,	0,	0,	0,	0,	0,	11,	 0}
};

static const u16 tsp_dnd_v_gap[18][10] = {
	{	15,	15,	15,	16,	15,	17,	17,	17,	17,	18},
	{	13,	13,	13,	13,	14,	12,	12,	12,	12,	11},
	{	12,	13,	13,	13,	13,	14,	14,	14,	14,	15},
	{	13,	13,	13,	13,	13,	12,	11,	11,	11,	11},
	{	12,	13,	13,	13,	13,	14,	14,	14,	14,	15},
	{	13,	13,	13,	13,	12,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	12,	12,	12,	12,	14},
	{	13,	13,	13,	13,	12,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	12,	12,	12,	13,	15},
	{	13,	13,	13,	13,	13,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	12,	12,	13,	13,	12},
	{	13,	13,	13,	13,	13,	11,	11,	11,	11,	11},
	{	12,	11,	11,	11,	11,	12,	12,	13,	13,	13},
	{	16,	15,	14,	14,	14,	12,	12,	11,	11,	12},
	{	14,	13,	12,	12,	12,	12,	12,	12,	13,	15},
	{	22,	19,	18,	17,	17,	14,	14,	14,	13,	12},
	{	20,	13,	12,	11,	11,	15,	14,	15,	16,	22},
	{	 0,	 0,	30,	 0,	 0,	 0,	 0,	31,	 0,	 0}
};

static const u16 assy_dnd_v_gap[18][10] = {
	{15,	15,	15,	15,	15,	16,	16,	17,	17,	18},
	{13,	13,	13,	13,	13,	12,	12,	12,	12,	11},
	{13,	13,	13,	13,	13,	14,	14,	14,	14,	15},
	{12,	12,	12,	12,	12,	11,	11,	11,	11,	11},
	{13,	13,	13,	13,	13,	14,	14,	14,	14,	15},
	{13,	13,	12,	12,	12,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	11,	12,	12,	12,	11,	13},
	{13,	13,	13,	13,	12,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	11,	12,	13,	12,	13,	14},
	{12,	13,	12,	12,	12,	11,	11,	11,	11,	13},
	{12,	11,	11,	11,	11,	12,	12,	12,	12,	11},
	{12,	13,	12,	12,	12,	11,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	12,	12,	12,	13,	12},
	{15,	15,	14,	14,	14,	12,	12,	12,	12,	11},
	{13,	13,	12,	12,	12,	11,	11,	11,	12,	13},
	{20,	18,	17,	16,	16,	14,	14,	13,	13,	11},
	{18,	12,	11,	11,	11,	14,	14,	14,	15,	19},
	{0,	0,	28,	0,	0,	0,	0,	30,	0,	0}
};

static const u16 tsp_hfdnd_h_gap[19][9] = {
	{	11,	11,	11,	11,	12,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	12,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	11,	11,	11,	11,	12,	11,	11,	11,	11},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11},
	{	12,	11,	11,	11,	12,	11,	11,	11,	12},
	{	13,	11,	11,	11,	11,	11,	11,	11,	12},
	{	14,	11,	11,	11,	12,	11,	11,	11,	16},
	{	16,	11,	11,	11,	12,	11,	11,	11,	14},
	{	17,	12,	11,	11,	13,	11,	11,	11,	22},
	{	24,	11,	11,	11,	13,	11,	11,	12,	17},
	{	 0,	 0,	 0,	 0,	 0,	 0,	 0,	16,	 0}

};

static const u16 assy_hfdnd_h_gap[19][9] = {
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	11,	11,	11,	11,	12},
	{11,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	12},
	{12,	11,	11,	11,	11,	11,	11,	11,	11},
	{11,	11,	11,	11,	12,	11,	11,	11,	11},
	{12,	11,	11,	11,	11,	11,	11,	11,	11},
	{12,	11,	11,	11,	12,	11,	11,	11,	11},
	{12,	11,	11,	11,	11,	11,	11,	11,	12},
	{13,	11,	11,	11,	12,	11,	11,	11,	15},
	{15,	11,	11,	11,	11,	11,	11,	11,	13},
	{16,	12,	11,	11,	12,	11,	11,	11,	20},
	{22,	11,	11,	11,	12,	11,	11,	12,	16},
	{0,	0,	0,	0,	0,	0,	0,	11,	0}
};

static const u16 tsp_hfdnd_v_gap[18][10] = {
	{	15,	15,	15,	15,	15,	16,	16,	16,	16,	17},
	{	13,	13,	13,	13,	13,	12,	12,	12,	11,	11},
	{	12,	12,	12,	12,	12,	13,	13,	13,	13,	14},
	{	12,	12,	12,	12,	12,	11,	11,	11,	11,	12},
	{	11,	12,	12,	12,	12,	13,	13,	13,	13,	15},
	{	12,	12,	12,	12,	11,	11,	11,	11,	11,	13},
	{	11,	11,	11,	11,	11,	11,	11,	11,	11,	13},
	{	13,	12,	12,	12,	12,	11,	11,	11,	11,	13},
	{	11,	11,	11,	11,	11,	11,	12,	12,	12,	14},
	{	13,	13,	13,	13,	12,	11,	11,	11,	11,	12},
	{	13,	11,	11,	11,	11,	12,	12,	12,	13,	14},
	{	17,	14,	14,	14,	14,	12,	11,	11,	11,	12},
	{	15,	11,	11,	11,	11,	13,	13,	13,	14,	17},
	{	23,	17,	17,	16,	16,	14,	14,	13,	13,	15},
	{	21,	12,	12,	11,	11,	13,	13,	14,	14,	22},
	{	33,	22,	21,	20,	20,	16,	16,	16,	15,	21},
	{	32,	13,	12,	11,	11,	15,	15,	16,	18,	33},
	{	 0,	 0,	30,	 0,	 0,	 0,	 0,	31,	 0,	 0}

};

static const u16 assy_hfdnd_v_gap[18][10] = {
	{15,	15,	15,	15,	14,	16,	16,	16,	16,	17},
	{12,	12,	12,	12,	12,	11,	11,	12,	12,	12},
	{12,	12,	12,	12,	12,	13,	13,	13,	13,	14},
	{12,	12,	12,	12,	12,	12,	12,	12,	12,	12},
	{12,	12,	12,	12,	12,	13,	13,	12,	13,	14},
	{12,	11,	11,	11,	11,	11,	11,	11,	11,	12},
	{12,	12,	12,	12,	12,	12,	12,	12,	12,	13},
	{13,	13,	12,	12,	12,	12,	12,	12,	12,	13},
	{11,	12,	11,	11,	12,	11,	11,	11,	11,	13},
	{13,	14,	13,	13,	13,	12,	12,	11,	11,	11},
	{12,	11,	11,	11,	11,	12,	12,	12,	12,	13},
	{15,	13,	13,	13,	13,	11,	11,	11,	11,	12},
	{14,	11,	11,	11,	11,	13,	13,	13,	13,	16},
	{21,	17,	17,	16,	15,	13,	14,	13,	13,	14},
	{19,	12,	11,	11,	11,	12,	13,	13,	13,	20},
	{29,	20,	19,	18,	18,	15,	15,	15,	14,	19},
	{29,	13,	12,	11,	11,	14,	14,	15,	16,	29},
	{0,	0,	25,	0,	0,	0,	0,	28,	0,	0}
};

static const u16 tsp_dnd_max [19][10] = {
	{	 9785, 	 9808,   9777,   9788, 	 9782,   9678,   9705,   9710, 	 9703,   9589},
	{	10130,	10157,	10155,	10154,	10127,	10140,	10163,	10167,	10167,	10159},
	{	10358,	10351,	10348,	10375,	10380,	10275,	10309,	10304,	10293,	10170},
	{	10498,	10534,	10543,	10547,	10559,	10557,	10594,	10586,	10543,	10548},
	{	10718,	10716,	10698,	10734,	10751,	10643,	10667,	10670,	10612,	10509},
	{	10860,	10892,	10893,	10939,	10972,	10938,	10950,	10938,	10907,	10927},
	{	11083,	11070,	11089,	11112,	11126,	11037,	11045,	11019,	10975,	10862},
	{	11093,	11100,	11156,	11163,	11203,	11189,	11163,	11149,	11104,	11146},
	{	11321,	11302,	11334,	11346,	11339,	11271,	11252,	11211,	11168,	11035},
	{	11335,	11314,	11384,	11393,	11402,	11445,	11377,	11362,	11338,	11373},
	{	11588,	11521,	11564,	11593,	11604,	11538,	11461,	11436,	11368,	11524},
	{	11644,	11548,	11607,	11604,	11644,	11680,	11616,	11592,	11556,	11619},
	{	11864,	11800,	11819,	11823,	11852,	11745,	11695,	11663,	11607,	11692},
	{	11760,	11733,	11790,	11815,	11843,	11885,	11834,	11818,	11770,	11871},
	{	12250,	12134,	12118,	12116,	12120,	12010,	11968,	11941,	11887,	11798},
	{	11893,	11925,	11958,	11978,	11999,	12080,	12004,	12016,	12004,	12176},
	{	13007,	12727,	12645,	12602,	12598,	12422,	12351,	12323,	12261,	11996},
	{	12124,	12545,	12587,	12573,	12636,	12805,	12719,	12738,	12778,	13142},
	{	    0,	    0,	10356,	    0,	    0,	    0,	    0,	10969,	    0,	    0}
};

static const u16 assy_dnd_max [19][10] = {
	{8400,	8400,	8400,	8400,	8500,	8300,	8400,	8300,	8400,	8300},
	{8800,	8800,	8800,	8800,	8800,	8800,	8800,	8800,	8800,	8800},
	{8900,	8900,	8900,	8900,	9000,	8900,	8900,	8900,	8900,	8800},
	{9100,	9100,	9100,	9100,	9100,	9100,	9200,	9100,	9200,	9100},
	{9200,	9200,	9200,	9200,	9300,	9200,	9200,	9200,	9200,	9100},
	{9400,	9400,	9400,	9400,	9400,	9400,	9500,	9400,	9500,	9500},
	{9600,	9600,	9600,	9600,	9600,	9500,	9500,	9500,	9500,	9400},
	{9600,	9600,	9600,	9600,	9600,	9600,	9700,	9600,	9600,	9600},
	{9800,	9800,	9700,	9700,	9700,	9700,	9700,	9700,	9700,	9600},
	{9900,	9800,	9800,	9800,	9800,	9800,	9800,	9800,	9800,	9900},
	{10000,	10000,	9900,	9900,	9900,	9800,	9800,	9900,	9900,	10100},
	{10100,	10000,	9900,	9900,	9900,	10000,	10000,	10000,	10000,	10100},
	{10200,	10100,	10100,	10100,	10100,	10000,	10000,	10000,	10000,	10100},
	{10200,	10100,	10100,	10100,	10100,	10100,	10200,	10200,	10200,	10300},
	{10500,	10400,	10400,	10400,	10400,	10200,	10300,	10300,	10300,	10300},
	{10300,	10300,	10200,	10300,	10300,	10300,	10400,	10300,	10400,	10500},
	{11200,	10900,	10800,	10800,	10800,	10600,	10600,	10600,	10600,	10500},
	{10400,	10700,	10800,	10800,	10800,	10900,	10900,	10900,	11000,	11300},
	{0,	0,	9900,	0,	0,	0,	0,	9800,	0,	0}
};

static const u16 tsp_dnd_min [19][10] = {
	{	4479,	4502,	4471,	4482,	4477,	4373,	4400,	4405,	4398,	4284},
	{	4825,	4851,	4850,	4849,	4822,	4834,	4858,	4861,	4862,	4854},
	{	5052,	5045,	5042,	5070,	5075,	4969,	5003,	4999,	4987,	4865},
	{	5193,	5229,	5237,	5241,	5254,	5251,	5288,	5281,	5238,	5243},
	{	5413,	5410,	5392,	5428,	5446,	5337,	5361,	5364,	5306,	5203},
	{	5555,	5587,	5587,	5634,	5667,	5632,	5644,	5633,	5602,	5622},
	{	5778,	5764,	5784,	5807,	5820,	5732,	5739,	5713,	5669,	5556},
	{	5788,	5794,	5850,	5858,	5897,	5883,	5858,	5844,	5799,	5840},
	{	6015,	5997,	6029,	6041,	6033,	5965,	5946,	5906,	5862,	5730},
	{	6029,	6009,	6079,	6087,	6097,	6140,	6071,	6057,	6033,	6068},
	{	6283,	6215,	6258,	6287,	6298,	6232,	6156,	6131,	6062,	6219},
	{	6339,	6243,	6302,	6299,	6339,	6374,	6310,	6286,	6250,	6313},
	{	6559,	6494,	6513,	6517,	6547,	6440,	6390,	6358,	6301,	6387},
	{	6455,	6428,	6484,	6509,	6538,	6579,	6529,	6512,	6464,	6566},
	{	6945,	6829,	6812,	6811,	6814,	6704,	6662,	6636,	6581,	6493},
	{	6587,	6620,	6653,	6672,	6693,	6775,	6698,	6710,	6699,	6870},
	{	7701,	7421,	7339,	7297,	7292,	7117,	7046,	7018,	6955,	6690},
	{	6818,	7239,	7281,	7268,	7331,	7500,	7413,	7433,	7472,	7837},
	{	   0,	   0,	5577,	   0,	   0,	   0,	   0,	5907,	   0,	   0}	
};

static const u16 assy_dnd_min [19][10] = {
	{5400,	5400,	5400,	5400,	5500,	5400,	5400,	5400,	5400,	5300},
	{5800,	5800,	5800,	5800,	5800,	5800,	5800,	5800,	5800,	5800},
	{6000,	6000,	5900,	6000,	6000,	5900,	5900,	5900,	5900,	5800},
	{6100,	6100,	6100,	6100,	6200,	6200,	6200,	6200,	6200,	6200},
	{6300,	6300,	6300,	6300,	6300,	6200,	6200,	6200,	6200,	6100},
	{6400,	6400,	6400,	6500,	6500,	6500,	6500,	6500,	6500,	6500},
	{6600,	6600,	6600,	6600,	6600,	6500,	6600,	6500,	6600,	6500},
	{6600,	6600,	6600,	6600,	6600,	6600,	6700,	6600,	6600,	6700},
	{6800,	6800,	6800,	6800,	6800,	6700,	6700,	6700,	6700,	6600},
	{6900,	6800,	6800,	6800,	6800,	6800,	6900,	6800,	6900,	6900},
	{7000,	7000,	7000,	7000,	7000,	6900,	6900,	6900,	6900,	7100},
	{7100,	7000,	7000,	6900,	7000,	7000,	7000,	7000,	7000,	7100},
	{7200,	7200,	7100,	7100,	7100,	7000,	7000,	7000,	7000,	7200},
	{7200,	7100,	7100,	7100,	7100,	7200,	7200,	7200,	7200,	7300},
	{7600,	7500,	7400,	7400,	7400,	7300,	7300,	7300,	7300,	7300},
	{7300,	7300,	7300,	7300,	7300,	7300,	7400,	7400,	7400,	7600},
	{8200,	7900,	7800,	7800,	7800,	7600,	7700,	7600,	7700,	7500},
	{7400,	7800,	7800,	7800,	7800,	7900,	7900,	7900,	8100,	8300},
	{0,	0,	5400,	0,	0,	0,	0,	5300,	0,	0}
};

#endif /* LINUX_BT531_TS_H */
